pipeline {
    agent any

    environment {
        DOCKER_IMAGE       = "ahmad201218/finalversion:latest"
        EC2_HOST           = "13.60.48.34"
        SSH_CREDENTIALS_ID = "jenkins-ec2-ssh"  // Verify this ID exists in Jenkins
        REMOTE_USER        = "ubuntu"           // EC2 username (ubuntu for Ubuntu AMI)
        CONTAINER_NAME     = "my_app"
        HOST_PORT          = "80"
        CONTAINER_PORT     = "8080"
    }

    stages {
        stage('Build Docker Image') {
            steps {
                // Use `sh` instead of `bat` for Linux agents
                bat "docker build -t ${DOCKER_IMAGE} ."
            }
        }

        stage('Push Docker Image') {
            steps {
                bat "docker push ${DOCKER_IMAGE}"
            }
        }

        stage('Deploy on EC2') {
            steps {
                echo "Entering SSH stage..."
                sshagent(credentials: [env.SSH_CREDENTIALS_ID]) {
                    // Use `sh` (not `bat`) for Linux commands
                    sh """
                        scp -v -o StrictHostKeyChecking=no docker-compose.yml ${REMOTE_USER}@${EC2_HOST}:/home/ubuntu/
                        ssh -vvv -o StrictHostKeyChecking=no ${REMOTE_USER}@${EC2_HOST} '
                            echo "Stopping and removing old container..."
                            docker stop ${CONTAINER_NAME} || true
                            docker rm ${CONTAINER_NAME} || true
                            echo "Pulling new image..."
                            docker pull ${DOCKER_IMAGE}
                            echo "Starting new container..."
                            docker run -d --name ${CONTAINER_NAME} -p ${HOST_PORT}:${CONTAINER_PORT} ${DOCKER_IMAGE}
                            docker logs ${CONTAINER_NAME}
                        '
                    """
                }
                echo "SSH stage completed."
            }
        }
    }

    post {
        success {
            echo 'Deployment successful!'
        }
        failure {
            echo 'Deployment failed!'
        }
    }
}