pipeline {
    agent any

    environment {
        DOCKER_IMAGE   = "ahmad201218/finalversion:latest"
        EC2_HOST       = "13.60.48.34"
        REMOTE_USER    = "ubuntu"
        CONTAINER_NAME = "my_app${BUILD_NUMBER}"
        HOST_PORT      = "80"
        CONTAINER_PORT = "8080"


        REGISTRY = "ahmad201218"   // Change this to your Docker Hub username
        IMAGE_NAME = "finalversion"        // Change this to your image name
        IMAGE_TAG = "latest"
    }

    stages {
        stage('Build Docker Image') {
            steps {
                sh "docker build -t ${DOCKER_IMAGE} ."
            }
        }

        stage('Push Docker Image') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'docker-hub-credentials', usernameVariable: 'DOCKER_USER', passwordVariable: 'DOCKER_PASS')]) {
    sh """
    echo "$DOCKER_PASS" | docker login -u "$DOCKER_USER" --password-stdin
    docker push ahmad201218/finalversion:latest
    """
            }
        }}
     stage('Deploy on EC2') {
            steps {
                echo "Entering SSH stage..."
                withCredentials([sshUserPrivateKey(credentialsId: 'EC2_PRIVATE_KEY', keyFileVariable: 'SSH_KEY', usernameVariable: 'SSH_USER')]) {
                    sh """
                    echo 'echo "Connected to EC2"' > deploy_script.sh
                    echo 'docker ps' >> deploy_script.sh  # Add deployment commands here
                    chmod +x deploy_script.sh
                    scp -i "$SSH_KEY" -o StrictHostKeyChecking=no deploy_script.sh $SSH_USER@13.60.48.34:/home/ubuntu/
                    ssh -i "$SSH_KEY" -o StrictHostKeyChecking=no $SSH_USER@13.60.48.34 'bash /home/ubuntu/deploy_script.sh'
                    docker stop $(docker ps -q)
                    docker pull ahmad201218/finalversion:latest
                    docker run -d -p 8080:8080 --name $CONTAINER_NAME ahmad201218/finalversion:latest
                    """
                }
            }
        }  
}

    post {
        success {
            echo "Deployment successful!"
        }
        failure {
            echo "Deployment failed!"
        }
    }
}
